#ip 2
0  addi 2 16 2 # jmp 17
1  seti 1 0 4  # r[4] = 1
2  seti 1 5 5  # r[5] = 1
3  mulr 4 5 1  # r[1] = r[4] * r[5]   # r[1] = 1
4  eqrr 1 3 1  # r[1] = r[1] == r[3]  # if 
5  addr 1 2 2  # if r[1] == r[3]: jmp 7
6  addi 2 1 2  # jmp 8
7  addr 4 0 0  # r[0] += r[4]
8  addi 5 1 5  # r[5] += 1
9  gtrr 5 3 1  # r[1] = r[5] > r[3]
10 addr 2 1 2  # if r[5] > r[3]: jmp 12
11 seti 2 6 2  # jmp 3
12 addi 4 1 4  # r[4] += 1
13 gtrr 4 3 1  # r[1] = r[4] > r[3]
14 addr 1 2 2  # if r[4] > r[3]: jmp 16
15 seti 1 7 2  # jmp 2
16 mulr 2 2 2  # jmp exit
17 addi 3 2 3  # r[3] += 2
18 mulr 3 3 3  # r[3] *= r[3]
19 mulr 2 3 3  # r[3] *= r[2]
20 muli 3 11 3 # r[3] *= 11
21 addi 1 6 1  # r[1] += 6
21 mulr 1 2 1  # r[1] *= r[2]
22 addi 1 6 1  # r[1] += 6
23 addr 3 1 3  # r[3] += r[1]
24 addr 2 0 2  # jmp 24 + r[0]
25 seti 0 3 2  # r[2] = 0
26 setr 2 3 1  # r[1] = r[2] # r[1] = 0
27 mulr 1 2 1  # r[1] *= 0 # r[1] = 0
28 addr 2 1 1  # r[1] += r[2] # r[1] = 0
29 mulr 2 1 1  # r[1] *= r[2] # r[1] = 0
30 muli 1 14 1 # r[1] *= 14 # r[1] = 0
31 mulr 1 2 1  # r[1] *= 31 # r[1] = 0
32 addr 3 1 3  # r[3] += r[1]
33 seti 0 9 0  # r[0] = 0
34 seti 0 5 2  # jmp 1

for j = 1; j <= r[3]; j++ { j = r[4]
    for i = 1; i <= r[3]; i++ { # i = r[5]
        r[1] = j * i
        if j * i == r[3]:
            r[0] += j       # r[0]
